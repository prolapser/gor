name: Build Go Readability

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
    - name: проверка этого репо
      uses: actions/checkout@v3
      with:
        repository: ${{ github.repository }}
        path: tracking-repo

    - name: проверка оригинального репо
      uses: actions/checkout@v3
      with:
        repository: go-shiori/go-readability
        path: original-repo
        fetch-depth: 1

    - name: проверка изменений в оригинальном репо
      id: check_changes
      run: |
        # последний коммит в оригинальном репо
        LATEST_COMMIT=$(curl -s https://api.github.com/repos/go-shiori/go-readability/commits/master | jq -r '.sha')
        
        # файл с SHA в этом репозитории
        COMMIT_FILE="${GITHUB_WORKSPACE}/tracking-repo/latest_commit.txt"
        
        # проверка файла
        if [ -f "$COMMIT_FILE" ]; then
          PREVIOUS_COMMIT=$(cat "$COMMIT_FILE")
          
          if [ "$LATEST_COMMIT" != "$PREVIOUS_COMMIT" ]; then
            echo "✅ обнаружены изменения!"
            echo "new_changes=true" >> $GITHUB_OUTPUT
          else
            echo "❌ ничего не поменялось."
            echo "new_changes=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "☑️ первй запуск сборки?"
          echo "new_changes=true" >> $GITHUB_OUTPUT
        fi
        
        # обновление файл с SHA
        echo "$LATEST_COMMIT" > "$COMMIT_FILE"

    - name: установка Go
      if: steps.check_changes.outputs.new_changes == 'true'
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: сборка статического бинарника для Linux
      if: steps.check_changes.outputs.new_changes == 'true'
      run: |
        go get github.com/tdewolff/minify/v2
        go get github.com/tdewolff/minify/v2/html
        cp "${GITHUB_WORKSPACE}/tracking-repo/main.go" ./original-repo/cmd/go-readability
        cd ./original-repo/cmd/go-readability
        CGO_ENABLED=0 GOOS=linux go build -ldflags '-extldflags "-static"'
        ./go-readability -h
        echo 'бинарник скомпилировался сюда (Linux):'
        realpath ./go-readability

    - name: сборка статического бинарника для Windows
      if: steps.check_changes.outputs.new_changes == 'true'
      run: |
        cd ./original-repo/cmd/go-readability
        CGO_ENABLED=0 GOOS=windows go build -ldflags '-extldflags "-static"' -o go-readability.exe
        echo 'бинарник скомпилировался сюда (Windows):'
        realpath ./go-readability.exe

    - name: фиксация commit SHA оригинального репо в этом репо
      if: steps.check_changes.outputs.new_changes == 'true'
      run: |
        cd tracking-repo
        git config user.name 'github-actions'
        git config user.email 'github-actions@github.com'
        git add latest_commit.txt
        git commit -m "+" || exit 0
        git push

    - name: удаление предыдущего релиза
      if: steps.check_changes.outputs.new_changes == 'true'
      run: |
        gh release delete latest --yes || echo "удалять нечего..."

    - name: создание свежего релиза
      if: steps.check_changes.outputs.new_changes == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./original-repo/cmd/go-readability/go-readability
          ./original-repo/cmd/go-readability/go-readability.exe
        tag_name: latest
        release_name: "latest"
